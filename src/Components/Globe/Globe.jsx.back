import { useEffect } from "react";
import Globe from "globe.gl";
import earth from "./earth-dark.jpg";
import data from "./new.json";

const pointsData = data.features.map((feature) => ({
  lat: feature.geometry.coordinates[1],
  lng: feature.geometry.coordinates[0],
  name: feature.properties.Prop,
}));
console.log(pointsData);

const GlobeComponent = () => {
  useEffect(() => {
    const markerSvg = `<svg viewBox="-4 0 36 36">
    <path fill="currentColor" d="M14,0 C21.732,0 28,5.641 28,12.6 C28,23.963 14,36 14,36 C14,36 0,24.064 0,12.6 C0,5.641 6.268,0 14,0 Z"></path>
    <circle fill="black" cx="14" cy="14" r="7"></circle>
    </svg>`;
    const tooltip = document.createElement("div");

    const world = Globe()
      .backgroundColor("white")
      .atmosphereColor("gray")
      .globeImageUrl(earth)
      .htmlElementsData(pointsData)
      .pointsData(pointsData)
      .pointColor(() => "red") // set the color of the points to red
      .pointAltitude(0.1) // set the altitude of the points to 0.1 (relative to the globe radius)
      .pointRadius(0.5)
      // .htmlElementsData(gData)
      .htmlElement((d) => {
        const el = document.createElement("div");
        el.innerHTML = markerSvg;
        el.style.color = d.color;
        el.style.width = `${d.size}px`;

        el.style["pointer-events"] = "auto";
        el.style.cursor = "pointer";
        el.onmouseenter = (event) => {
          tooltip.innerHTML = d.name;
          tooltip.style.display = "block";
          tooltip.style.left = `${event.clientX}px`;
          tooltip.style.top = `${event.clientY}px`;
        };
        el.onmouseleave = () => {
          tooltip.style.display = "none";
        };
        el.onclick = () => {
          console.log(d); // handle click event here
        };
        return el;
      })(document.getElementById("globeViz"));
  }, []);
  return (
    <div className="">
      <div id="globeViz" className="w-[100vw]"></div>
    </div>
  );
};

export default GlobeComponent;
